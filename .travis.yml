---
sudo: required
dist: bionic

notifications:
  slack:
    on_failure: always

matrix:
  fast_finish: true
  include:

    - name: "build airflow celery example1 on bionic amd64"
      os: linux
      dist: bionic
      arch: amd64
      services:
      - docker
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - cd airflow/example1
        - docker-compose -f docker-compose-celery.yaml up -d
        # ERROR: Error while attempting to convert service.webserver.healthcheck.retries to appropriate type: "3s" is not a valid integer
        # - docker-compose logs #Displays log output
        # - docker-compose ps #List containersi        
      after_success:
        - deactivate

    - name: "build airflow example1 on bionic amd64"
      os: linux
      dist: bionic
      arch: amd64
      services:
      - docker
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - cd airflow/example1
        # ERROR: Error while attempting to convert service.webserver.healthcheck.retries to appropriate type: "3s" is not a valid integer
        # - docker-compose up -d
        # - docker-compose logs #Displays log output
        # - docker-compose ps #List containersi   
      after_success:
        - deactivate

    - name: "build airflow image Extra Airflow Packages(combined) on bionic amd64"
      os: linux
      dist: bionic
      arch: amd64
      services:
      - docker
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - docker build --rm --build-arg AIRFLOW_DEPS="datadog,dask" --build-arg PYTHON_DEPS="flask_oauthlib>=0.9" -t puckel/docker-airflow .
        - docker image ls
        # By default, docker-airflow runs Airflow with SequentialExecutor
        - docker run -d -p 8080:8080 puckel/docker-airflow webserver
      after_success:
        - deactivate

    - name: "build airflow image python dependencies on bionic amd64"
      os: linux
      dist: bionic
      arch: amd64
      services:
      - docker
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - docker build --rm --build-arg PYTHON_DEPS="flask_oauthlib>=0.9" -t puckel/docker-airflow .
        - docker image ls
        # By default, docker-airflow runs Airflow with SequentialExecutor
        - docker run -d -p 8080:8080 puckel/docker-airflow webserver        
      after_success:
        - deactivate

    - name: "build airflow image Extra Airflow Packages  on bionic amd64"
      os: linux
      dist: bionic
      arch: amd64
      services:
      - docker
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - git clone https://github.com/puckel/docker-airflow.git && cd docker-airflow
        - docker build --rm --build-arg AIRFLOW_DEPS="datadog,dask" -t puckel/docker-airflow .
        - docker image ls
        # By default, docker-airflow runs Airflow with SequentialExecutor
        - docker run -d -p 8080:8080 puckel/docker-airflow webserver        
      after_success:
        - deactivate

    - name: "build airflow image DAGs example loaded on bionic amd64"
      os: linux
      dist: bionic
      arch: amd64
      services:
      - docker
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - docker pull puckel/docker-airflow
        - docker image ls
        # have DAGs example loaded (default=False)
        - docker run -d -p 8080:8080 -e LOAD_EX=y puckel/docker-airflow      
      after_success:
        - deactivate
        
    - name: "build airflow image on bionic amd64"
      os: linux
      dist: bionic
      arch: amd64
      services:
      - docker
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - docker pull puckel/docker-airflow
        - docker image ls
        # By default, docker-airflow runs Airflow with SequentialExecutor
        - docker run -d -p 8080:8080 puckel/docker-airflow webserver        
      after_success:
        - deactivate

    - name: "deploy airflow  on bionic amd64"
      os: linux
      dist: bionic
      arch: amd64
      services:
      - docker
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - cd airflow
        - docker-compose up -d #Run the web service with docker
        # curl: (56) Recv failure: Connection reset by peer
        # - curl http://localhost:8080/
        - docker-compose logs #Displays log output
        - docker-compose ps #List containersi
        # airflow sub-commands
        # AttributeError: module 'sqlalchemy.dialects.postgresql' has no attribute 'MONEY'
        # - docker-compose run --rm webserver airflow list_dags #List dags
      after_success:
        - docker-compose down #Stop containers
        - deactivate

    - name: "deploy airflow  build image on bionic amd64"
      os: linux
      dist: bionic
      arch: amd64
      services:
      - docker
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - cd airflow
        - docker-compose up -d --build #Build the image
        # curl: (56) Recv failure: Connection reset by peer
        # - curl http://localhost:8080/
        - docker-compose logs #Displays log output
        - docker-compose ps #List containersi
        # airflow sub-commands
        # AttributeError: module 'sqlalchemy.dialects.postgresql' has no attribute 'MONEY'
        # - docker-compose run --rm webserver airflow list_dags #List dags
      after_success:
        - docker-compose down #Stop containers
        - deactivate